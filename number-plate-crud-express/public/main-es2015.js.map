{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/plates/new/new.component.ts","./src/app/plates/new/new.component.html","./src/app/plates/plates.component.ts","./src/app/plates/plates.component.html","./src/app/plates/plates.service.ts","./src/app/plates/update/update.component.ts","./src/app/plates/update/update.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlatesComponent } from './plates/plates.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'plates',\n    pathMatch: 'full'\n  },\n\n  {\n    path: 'plates',\n    component: PlatesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'number-plate-crud-angular';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PlatesComponent } from './plates/plates.component';\nimport { NewComponent } from './plates/new/new.component';\nimport { FormsModule } from '@angular/forms';\nimport { UpdateComponent } from './plates/update/update.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlatesComponent,\n    NewComponent,\n    UpdateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    NgbModalModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { PlatesService } from '../plates.service';\nimport { Plate } from '../Plate';\n\nenum Status {\n  new,\n  done,\n  error\n}\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.scss']\n})\nexport class NewComponent implements OnInit {\n  plate: Plate = {\n    id: null,\n    owner: '',\n    number: ''\n  };\n  Status = Status;\n  status = Status.new;\n  error = '';\n\n  constructor(private modalService: NgbModal, private platesService: PlatesService) { }\n\n  ngOnInit(): void {\n  }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-new-plate'}).result.then((result) => {\n      if (result == \"save\") {\n        if (!this.plate.number || !this.plate.owner) {\n          this.error = 'All fields are required!';\n          this.open(content);\n          return;\n        }\n        const pattern = /[a-zA-Z]{3}[\\d]{3}/;\n        const matches = this.plate.number.match(pattern);\n        if (!matches || matches[0] != this.plate.number) {\n          this.error = 'Please enter correct plate number. Pattern is XXXYYY, where X must be a letter and Y must be a digit!';\n          this.open(content);\n          return;\n        }\n\n        this.platesService.create({\n          owner: this.plate.owner,\n          plateNumber: this.plate.number\n        }).subscribe(data => {\n          if (data != \"PLATE_EXISTS\") {\n            this.status = Status.done;\n          } else {\n            this.error = 'A plate with same number already exists!';\n          }\n        }, (err) => {\n          this.status = Status.error;\n        });\n        this.open(content);\n      }\n    }, (reason) => {\n      this.modalService.dismissAll();\n    });\n  }\n\n  close(reload = false) {\n    this.plate = {\n      id: null,\n      owner: '',\n      number: ''\n    };\n\n    this.status = Status.new;\n    this.error = '';\n\n    if (reload) {\n      window.location.href = '/';\n    }\n  }\n}\n","<div class=\"d-flex flex-row-reverse p-2\">\n  <button class=\"btn btn-primary ml-1\" (click)=\"open(newPlate)\">New</button>\n</div>\n\n<ng-template #newPlate let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-new-plate\">New Number Plate</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel'); close()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n\n  <div *ngIf=\"status === Status.new\">\n    <div class=\"modal-body\">\n      <form (ngSubmit)=\"open(newPlate)\">\n        <div class=\"form-group\">\n          <div class=\"form-group\">\n              <input type=\"text\" name=\"ownerName\" placeholder=\"Owner Name\"\n                  [(ngModel)]=\"plate.owner\" class=\"form-control\" required>\n          </div>\n          <div class=\"form-group\">\n              <input type=\"text\" name=\"plateNumber\" placeholder=\"Plate Number\"\n                  pattern=\"[\\A-Za-z]{1,3}[\\d]{1,3}\"\n                  [(ngModel)]=\"plate.number\" class=\"form-control\" required>\n          </div>\n        </div>\n        <div class=\"font-weight-light text-danger\">{{ error }}</div>\n      </form>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"submit\" class=\"btn btn-outline-dark\" (click)=\"modal.close('save')\">Save</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"status === Status.done\">\n    <div class=\"modal-body\">\n      New Plate has been created!\n    </div>\n\n    <div class=\"d-flex flex-row-reverse p-2\">\n      <button type=\"button\" class=\"btn btn-success\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel'); close(true)\">\n        <span aria-hidden=\"true\">Close</span>\n      </button>\n    </div>\n  </div>\n\n  <div *ngIf=\"status === Status.error\">\n    <div class=\"modal-body\">\n      Sorry, some kind of error occured!\n    </div>\n\n    <div class=\"d-flex flex-row-reverse p-2\">\n      <button type=\"button\" class=\"btn btn-secondary\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel'); close()\">\n        <span aria-hidden=\"true\">Close</span>\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { PlatesService } from './plates.service';\nimport { EventEmitter } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Plate } from './Plate';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\nenum Status {\n  new,\n  done,\n  error\n}\n\n@Component({\n  selector: 'app-plates',\n  templateUrl: './plates.component.html',\n  styleUrls: ['./plates.component.scss']\n})\nexport class PlatesComponent implements OnInit {\n  Status = Status;\n\n  plates: any;\n  plate: Plate = {\n    id: null,\n    owner: '',\n    number: ''\n  };\n  plateToDelete: Plate = {\n    id: null,\n    owner: '',\n    number: ''\n  }\n\n  pages = [];\n  currentPage = null;\n\n  deleteEmitter = new EventEmitter();\n  deleteStatus = Status.new;\n  updateStatus = Status.new;\n  updateError: string;\n  searchText: any = '';\n  inSearch = false;\n\n  constructor(private modalService: NgbModal, private platesService: PlatesService) { }\n\n  ngOnInit(): void {\n    this.platesService.getCount().subscribe((count: number) => {\n      let start = 1;\n\n      this.pages.push({\n        start,\n        title: `Plates ${start}-${start+9}`\n      });\n\n      start = 11;\n      while(count > 10) {\n        this.pages.push({\n          start,\n          title: `Plates ${start}-${start+9}`\n        });\n\n        count -= 10;\n        start += 10;\n      }\n    });\n\n    this.platesService.get().subscribe(plates => this.plates = plates);\n  }\n\n  delete(id) {\n    this.deleteEmitter.emit({\n      id\n    });\n  }\n\n  openDeleteModal(content, plate) {\n    this.plateToDelete = {\n      id: plate._id,\n      owner: plate.owner,\n      number: plate.plateNumber\n    };\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-new-plate'}).result.then((result) => {\n      if (result == \"save\") {\n        this.platesService.delete(this.plateToDelete.id)\n        .subscribe(data => {\n          this.deleteStatus = Status.done;\n        }, (err) => {\n          console.log(err);\n          this.deleteStatus= Status.error;\n        });\n        this.openDeleteModal(content, plate);\n      }\n    }, (reason) => {\n      if (reason == \"close\") {\n        window.location.href = \"/\";\n      }\n    });\n  }\n\n  openUpdateModal(content, plate) {\n    this.plate.number = plate.plateNumber;\n    this.plate.owner = plate.owner;\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-update-plate'}).result.then((result) => {\n      if (result == \"save\") {\n        if (!this.plate.number || !this.plate.owner) {\n          this.updateError = 'All fields are required!';\n          this.openUpdateModal(content, plate);\n          return;\n        }\n        const pattern = /[a-zA-Z]{3}[\\d]{3}/;\n        const matches = this.plate.number.match(pattern);\n        if (!matches || matches[0] != this.plate.number) {\n          this.updateError = 'Please enter correct plate number. Pattern is XXXYYY, where X must be a letter and Y must be a digit!';\n          this.openUpdateModal(content, plate);\n          return;\n        }\n\n        this.platesService.update({\n          id: plate._id,\n          owner: this.plate.owner,\n          plateNumber: this.plate.number\n        }).subscribe(data => {\n          if (data != \"PLATE_EXISTS\") {\n            this.updateStatus = Status.done;\n          } else {\n            this.updateError = 'A plate with same number already exists!';\n          }\n        }, (err) => {\n          this.updateStatus= Status.error;\n        });\n        this.openUpdateModal(content, plate);\n      }\n    }, (reason) => {\n      this.modalService.dismissAll();\n    });\n  }\n\n  closeUpdateModal(reload = false) {\n    this.plate = {\n      id: null,\n      owner: '',\n      number: ''\n    };\n\n    this.updateStatus = Status.new;\n    this.updateError = '';\n\n    if (reload) {\n      window.location.href = '/';\n    }\n  }\n\n\n  changePage() {\n    const page = this.pages.find(p => p.title == this.currentPage) || this.pages[0];\n    if (page) {\n      this.platesService.get(page.start).subscribe(plates => this.plates = plates);\n    }\n  }\n\n\n  search() {\n    if (!!this.searchText) {\n      this.platesService.search(this.searchText).subscribe(plates => this.plates = plates);\n      this.inSearch = true;\n    }\n  }\n\n\n  closeSearch() {\n    this.searchText = '';\n    this.inSearch = false;\n    this.changePage();\n  }\n}\n","<div class=\"p-2\">\n  <h2 class=\"text-center\">Number Plates</h2>\n\n  <div class=\"container\">\n    <div class=\"row align-items-center\">\n      <div class=\"col-2\">\n        <app-new></app-new>\n      </div>\n\n      <div class=\"col-4\">\n        <select class=\"form-control\" [(ngModel)]=\"currentPage\" (ngModelChange)=\"changePage()\"\n          [disabled]=\"inSearch\">\n          <option *ngFor=\"let page of pages\">\n            {{ page.title }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"col-6 col-sm-4\">\n        <div class=\"input-group\">\n          <input class=\"form-control\" type=\"text\" placeholder=\"Search\" [(ngModel)]=\"searchText\"\n            maxlength=\"64\">\n\n          <div class=\"input-group-append d-flex flex-row align-items-center\">\n            <button class=\"btn btn-primary\" (click)=\"search()\">Go</button>\n\n            <button class=\"btn btn-primary\"\n              (click)=\"closeSearch()\" *ngIf=\"inSearch\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"p-1\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Owner</th>\n          <th scope=\"col\">Plate Number</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let plate of plates; index as i\">\n          <td>{{ plate.owner }}</td>\n          <td>{{ plate.plateNumber }}</td>\n          <td>\n            <div class=\"d-flex flex-row flex-wrap\">\n              <button class=\"btn btn-primary mr-1\"\n                (click)=\"openUpdateModal(updatePlate, plate)\">Edit</button>\n\n              <button class=\"btn btn-danger mr-1\" (click)=\"openDeleteModal(deletePlate, plate)\">Delete</button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <ng-template #deletePlate let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-delete-plate\">Delete Number Plate</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel');\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <div>\n      <div *ngIf=\"deleteStatus === Status.new\">\n        <div class=\"modal-body\">\n          <b>Are you sure, you want to delete this plate {{plateToDelete.number}}?</b>\n        </div>\n\n        <div class=\"modal-footer d-flex flex-row flex-wrap\">\n          <button type=\"button\" class=\"btn btn-light\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel');\">\n            No\n          </button>\n          <button type=\"submit\" class=\"btn btn-danger\" (click)=\"modal.close('save')\">Yes</button>\n        </div>\n      </div>\n\n      <div *ngIf=\"deleteStatus === Status.done\">\n        <div class=\"modal-body\">\n          <b>Plate has been deleted successfully!</b>\n          <div class=\"d-flex flex-row-reverse p-2\">\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('close');\">\n              <span aria-hidden=\"true\">Close</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"deleteStatus === Status.error\">\n        <div class=\"modal-body\">\n          <b>Sorry, an error occured!</b>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #updatePlate let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-update-plate\">Update Number Plate</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel'); closeUpdateModal()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <div *ngIf=\"updateStatus === Status.new\">\n      <div class=\"modal-body\">\n        <form>\n          <div class=\"form-group\">\n            <div class=\"form-group\">\n              <input type=\"text\" name=\"ownerName\" placeholder=\"Owner Name\" [(ngModel)]=\"plate.owner\"\n                class=\"form-control\" required>\n            </div>\n            <div class=\"form-group\">\n              <input type=\"text\" name=\"plateNumber\" placeholder=\"Plate Number\" pattern=\"[\\A-Za-z]{1,3}[\\d]{1,3}\"\n                [(ngModel)]=\"plate.number\" class=\"form-control\" required>\n            </div>\n          </div>\n          <div class=\"font-weight-light text-danger\">{{ updateError }}</div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-outline-dark\" (click)=\"modal.close('save')\">Save</button>\n      </div>\n    </div>\n\n    <div *ngIf=\"updateStatus === Status.done\">\n      <div class=\"modal-body\">\n        Plate has been updated\n      </div>\n\n      <div class=\"d-flex flex-row-reverse p-2\">\n        <button type=\"button\" class=\"btn btn-success\" aria-label=\"Close\"\n          (click)=\"modal.dismiss('cancel'); closeUpdateModal(true)\">\n          <span aria-hidden=\"true\">Close</span>\n        </button>\n      </div>\n    </div>\n\n    <div *ngIf=\"updateStatus === Status.error\">\n      <div class=\"modal-body\">\n        Sorry, some kind of error occured!\n      </div>\n\n      <div class=\"d-flex flex-row-reverse p-2\">\n        <button type=\"button\" class=\"btn btn-secondary\" aria-label=\"Close\"\n          (click)=\"modal.dismiss('cancel'); closeUpdateModal()\">\n          <span aria-hidden=\"true\">Close</span>\n        </button>\n      </div>\n    </div>\n  </ng-template>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlatesService {\n  backendBaseURL = 'http://localhost:3000/api/plates';\n\n  constructor(private httpClient: HttpClient) { }\n\n  get(start = 1) {\n    return this.httpClient.get(this.backendBaseURL, {\n      params: new HttpParams().set('start', start.toString())\n    });\n  }\n\n\n  search(searchText) {\n    return this.httpClient.get(`${this.backendBaseURL}/search`, {\n      params: new HttpParams().set('search', searchText)\n    });\n  }\n\n\n  getCount() {\n    return this.httpClient.get(`${this.backendBaseURL}/count`);\n  }\n\n\n  create(data): Observable<any> {\n    return this.httpClient.post(\n      `${this.backendBaseURL}`,\n      JSON.stringify(data),\n      {\n        headers: new HttpHeaders({\n          'content-type': 'application/json',\n        }),\n      }\n    );\n  }\n\n  delete(id): Observable<any> {\n    return this.httpClient.delete(\n      `${this.backendBaseURL}`,\n      {\n        params: new HttpParams().set('id', id)\n      }\n    );\n  }\n\n  update(plate): Observable<any> {\n    return this.httpClient.put(\n      `${this.backendBaseURL}`,\n\n      JSON.stringify(plate),\n\n      {\n        headers: new HttpHeaders({\n          'content-type': 'application/json'\n        })\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>update works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}