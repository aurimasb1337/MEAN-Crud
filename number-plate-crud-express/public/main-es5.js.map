{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/plates/new/new.component.ts","webpack:///src/app/plates/new/new.component.html","webpack:///src/app/plates/plates.component.ts","webpack:///src/app/plates/plates.component.html","webpack:///src/app/plates/plates.service.ts","webpack:///src/app/plates/update/update.component.ts","webpack:///src/app/plates/update/update.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Status","NewComponent","modalService","platesService","plate","owner","number","status","error","content","open","ariaLabelledBy","result","pattern","matches","match","create","plateNumber","subscribe","data","done","err","reason","dismissAll","reload","window","location","href","PlatesComponent","plateToDelete","pages","currentPage","deleteEmitter","deleteStatus","updateStatus","searchText","inSearch","getCount","count","start","push","get","plates","emit","_id","console","log","openDeleteModal","updateError","openUpdateModal","update","page","find","p","search","changePage","PlatesService","httpClient","backendBaseURL","params","set","toString","post","JSON","stringify","headers","put","providedIn","UpdateComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlatesComponent } from './plates/plates.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'plates',\n    pathMatch: 'full'\n  },\n\n  {\n    path: 'plates',\n    component: PlatesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'number-plate-crud-angular';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PlatesComponent } from './plates/plates.component';\nimport { NewComponent } from './plates/new/new.component';\nimport { FormsModule } from '@angular/forms';\nimport { UpdateComponent } from './plates/update/update.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlatesComponent,\n    NewComponent,\n    UpdateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    NgbModalModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { PlatesService } from '../plates.service';\nimport { Plate } from '../Plate';\n\nenum Status {\n  new,\n  done,\n  error\n}\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.scss']\n})\nexport class NewComponent implements OnInit {\n  plate: Plate = {\n    id: null,\n    owner: '',\n    number: ''\n  };\n  Status = Status;\n  status = Status.new;\n  error = '';\n\n  constructor(private modalService: NgbModal, private platesService: PlatesService) { }\n\n  ngOnInit(): void {\n  }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-new-plate'}).result.then((result) => {\n      if (result == \"save\") {\n        if (!this.plate.number || !this.plate.owner) {\n          this.error = 'All fields are required!';\n          this.open(content);\n          return;\n        }\n        const pattern = /[a-zA-Z]{3}[\\d]{3}/;\n        const matches = this.plate.number.match(pattern);\n        if (!matches || matches[0] != this.plate.number) {\n          this.error = 'Please enter correct plate number. Pattern is XXXYYY, where X must be a letter and Y must be a digit!';\n          this.open(content);\n          return;\n        }\n\n        this.platesService.create({\n          owner: this.plate.owner,\n          plateNumber: this.plate.number\n        }).subscribe(data => {\n          if (data != \"PLATE_EXISTS\") {\n            this.status = Status.done;\n          } else {\n            this.error = 'A plate with same number already exists!';\n          }\n        }, (err) => {\n          this.status = Status.error;\n        });\n        this.open(content);\n      }\n    }, (reason) => {\n      this.modalService.dismissAll();\n    });\n  }\n\n  close(reload = false) {\n    this.plate = {\n      id: null,\n      owner: '',\n      number: ''\n    };\n\n    this.status = Status.new;\n    this.error = '';\n\n    if (reload) {\n      window.location.href = '/';\n    }\n  }\n}\n","<div class=\"d-flex flex-row-reverse p-2\">\n  <button class=\"btn btn-primary ml-1\" (click)=\"open(newPlate)\">New</button>\n</div>\n\n<ng-template #newPlate let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-new-plate\">New Number Plate</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel'); close()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n\n  <div *ngIf=\"status === Status.new\">\n    <div class=\"modal-body\">\n      <form (ngSubmit)=\"open(newPlate)\">\n        <div class=\"form-group\">\n          <div class=\"form-group\">\n              <input type=\"text\" name=\"ownerName\" placeholder=\"Owner Name\"\n                  [(ngModel)]=\"plate.owner\" class=\"form-control\" required>\n          </div>\n          <div class=\"form-group\">\n              <input type=\"text\" name=\"plateNumber\" placeholder=\"Plate Number\"\n                  pattern=\"[\\A-Za-z]{1,3}[\\d]{1,3}\"\n                  [(ngModel)]=\"plate.number\" class=\"form-control\" required>\n          </div>\n        </div>\n        <div class=\"font-weight-light text-danger\">{{ error }}</div>\n      </form>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"submit\" class=\"btn btn-outline-dark\" (click)=\"modal.close('save')\">Save</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"status === Status.done\">\n    <div class=\"modal-body\">\n      New Plate has been created!\n    </div>\n\n    <div class=\"d-flex flex-row-reverse p-2\">\n      <button type=\"button\" class=\"btn btn-success\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel'); close(true)\">\n        <span aria-hidden=\"true\">Close</span>\n      </button>\n    </div>\n  </div>\n\n  <div *ngIf=\"status === Status.error\">\n    <div class=\"modal-body\">\n      Sorry, some kind of error occured!\n    </div>\n\n    <div class=\"d-flex flex-row-reverse p-2\">\n      <button type=\"button\" class=\"btn btn-secondary\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel'); close()\">\n        <span aria-hidden=\"true\">Close</span>\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { PlatesService } from './plates.service';\nimport { EventEmitter } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Plate } from './Plate';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\nenum Status {\n  new,\n  done,\n  error\n}\n\n@Component({\n  selector: 'app-plates',\n  templateUrl: './plates.component.html',\n  styleUrls: ['./plates.component.scss']\n})\nexport class PlatesComponent implements OnInit {\n  Status = Status;\n\n  plates: any;\n  plate: Plate = {\n    id: null,\n    owner: '',\n    number: ''\n  };\n  plateToDelete: Plate = {\n    id: null,\n    owner: '',\n    number: ''\n  }\n\n  pages = [];\n  currentPage = null;\n\n  deleteEmitter = new EventEmitter();\n  deleteStatus = Status.new;\n  updateStatus = Status.new;\n  updateError: string;\n  searchText: any = '';\n  inSearch = false;\n\n  constructor(private modalService: NgbModal, private platesService: PlatesService) { }\n\n  ngOnInit(): void {\n    this.platesService.getCount().subscribe((count: number) => {\n      let start = 1;\n\n      this.pages.push({\n        start,\n        title: `Plates ${start}-${start+9}`\n      });\n\n      start = 11;\n      while(count > 10) {\n        this.pages.push({\n          start,\n          title: `Plates ${start}-${start+9}`\n        });\n\n        count -= 10;\n        start += 10;\n      }\n    });\n\n    this.platesService.get().subscribe(plates => this.plates = plates);\n  }\n\n  delete(id) {\n    this.deleteEmitter.emit({\n      id\n    });\n  }\n\n  openDeleteModal(content, plate) {\n    this.plateToDelete = {\n      id: plate._id,\n      owner: plate.owner,\n      number: plate.plateNumber\n    };\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-new-plate'}).result.then((result) => {\n      if (result == \"save\") {\n        this.platesService.delete(this.plateToDelete.id)\n        .subscribe(data => {\n          this.deleteStatus = Status.done;\n        }, (err) => {\n          console.log(err);\n          this.deleteStatus= Status.error;\n        });\n        this.openDeleteModal(content, plate);\n      }\n    }, (reason) => {\n      if (reason == \"close\") {\n        window.location.href = \"/\";\n      }\n    });\n  }\n\n  openUpdateModal(content, plate) {\n    this.plate.number = plate.plateNumber;\n    this.plate.owner = plate.owner;\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-update-plate'}).result.then((result) => {\n      if (result == \"save\") {\n        if (!this.plate.number || !this.plate.owner) {\n          this.updateError = 'All fields are required!';\n          this.openUpdateModal(content, plate);\n          return;\n        }\n        const pattern = /[a-zA-Z]{3}[\\d]{3}/;\n        const matches = this.plate.number.match(pattern);\n        if (!matches || matches[0] != this.plate.number) {\n          this.updateError = 'Please enter correct plate number. Pattern is XXXYYY, where X must be a letter and Y must be a digit!';\n          this.openUpdateModal(content, plate);\n          return;\n        }\n\n        this.platesService.update({\n          id: plate._id,\n          owner: this.plate.owner,\n          plateNumber: this.plate.number\n        }).subscribe(data => {\n          if (data != \"PLATE_EXISTS\") {\n            this.updateStatus = Status.done;\n          } else {\n            this.updateError = 'A plate with same number already exists!';\n          }\n        }, (err) => {\n          this.updateStatus= Status.error;\n        });\n        this.openUpdateModal(content, plate);\n      }\n    }, (reason) => {\n      this.modalService.dismissAll();\n    });\n  }\n\n  closeUpdateModal(reload = false) {\n    this.plate = {\n      id: null,\n      owner: '',\n      number: ''\n    };\n\n    this.updateStatus = Status.new;\n    this.updateError = '';\n\n    if (reload) {\n      window.location.href = '/';\n    }\n  }\n\n\n  changePage() {\n    const page = this.pages.find(p => p.title == this.currentPage) || this.pages[0];\n    if (page) {\n      this.platesService.get(page.start).subscribe(plates => this.plates = plates);\n    }\n  }\n\n\n  search() {\n    if (!!this.searchText) {\n      this.platesService.search(this.searchText).subscribe(plates => this.plates = plates);\n      this.inSearch = true;\n    }\n  }\n\n\n  closeSearch() {\n    this.searchText = '';\n    this.inSearch = false;\n    this.changePage();\n  }\n}\n","<div class=\"p-2\">\n  <h2 class=\"text-center\">Number Plates</h2>\n\n  <div class=\"container\">\n    <div class=\"row align-items-center\">\n      <div class=\"col-2\">\n        <app-new></app-new>\n      </div>\n\n      <div class=\"col-4\">\n        <select class=\"form-control\" [(ngModel)]=\"currentPage\" (ngModelChange)=\"changePage()\"\n          [disabled]=\"inSearch\">\n          <option *ngFor=\"let page of pages\">\n            {{ page.title }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"col-6 col-sm-4\">\n        <div class=\"input-group\">\n          <input class=\"form-control\" type=\"text\" placeholder=\"Search\" [(ngModel)]=\"searchText\"\n            maxlength=\"64\">\n\n          <div class=\"input-group-append d-flex flex-row align-items-center\">\n            <button class=\"btn btn-primary\" (click)=\"search()\">Go</button>\n\n            <button class=\"btn btn-primary\"\n              (click)=\"closeSearch()\" *ngIf=\"inSearch\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"p-1\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Owner</th>\n          <th scope=\"col\">Plate Number</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let plate of plates; index as i\">\n          <td>{{ plate.owner }}</td>\n          <td>{{ plate.plateNumber }}</td>\n          <td>\n            <div class=\"d-flex flex-row flex-wrap\">\n              <button class=\"btn btn-primary mr-1\"\n                (click)=\"openUpdateModal(updatePlate, plate)\">Edit</button>\n\n              <button class=\"btn btn-danger mr-1\" (click)=\"openDeleteModal(deletePlate, plate)\">Delete</button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <ng-template #deletePlate let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-delete-plate\">Delete Number Plate</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel');\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <div>\n      <div *ngIf=\"deleteStatus === Status.new\">\n        <div class=\"modal-body\">\n          <b>Are you sure, you want to delete this plate {{plateToDelete.number}}?</b>\n        </div>\n\n        <div class=\"modal-footer d-flex flex-row flex-wrap\">\n          <button type=\"button\" class=\"btn btn-light\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel');\">\n            No\n          </button>\n          <button type=\"submit\" class=\"btn btn-danger\" (click)=\"modal.close('save')\">Yes</button>\n        </div>\n      </div>\n\n      <div *ngIf=\"deleteStatus === Status.done\">\n        <div class=\"modal-body\">\n          <b>Plate has been deleted successfully!</b>\n          <div class=\"d-flex flex-row-reverse p-2\">\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('close');\">\n              <span aria-hidden=\"true\">Close</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"deleteStatus === Status.error\">\n        <div class=\"modal-body\">\n          <b>Sorry, an error occured!</b>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #updatePlate let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-update-plate\">Update Number Plate</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel'); closeUpdateModal()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <div *ngIf=\"updateStatus === Status.new\">\n      <div class=\"modal-body\">\n        <form>\n          <div class=\"form-group\">\n            <div class=\"form-group\">\n              <input type=\"text\" name=\"ownerName\" placeholder=\"Owner Name\" [(ngModel)]=\"plate.owner\"\n                class=\"form-control\" required>\n            </div>\n            <div class=\"form-group\">\n              <input type=\"text\" name=\"plateNumber\" placeholder=\"Plate Number\" pattern=\"[\\A-Za-z]{1,3}[\\d]{1,3}\"\n                [(ngModel)]=\"plate.number\" class=\"form-control\" required>\n            </div>\n          </div>\n          <div class=\"font-weight-light text-danger\">{{ updateError }}</div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-outline-dark\" (click)=\"modal.close('save')\">Save</button>\n      </div>\n    </div>\n\n    <div *ngIf=\"updateStatus === Status.done\">\n      <div class=\"modal-body\">\n        Plate has been updated\n      </div>\n\n      <div class=\"d-flex flex-row-reverse p-2\">\n        <button type=\"button\" class=\"btn btn-success\" aria-label=\"Close\"\n          (click)=\"modal.dismiss('cancel'); closeUpdateModal(true)\">\n          <span aria-hidden=\"true\">Close</span>\n        </button>\n      </div>\n    </div>\n\n    <div *ngIf=\"updateStatus === Status.error\">\n      <div class=\"modal-body\">\n        Sorry, some kind of error occured!\n      </div>\n\n      <div class=\"d-flex flex-row-reverse p-2\">\n        <button type=\"button\" class=\"btn btn-secondary\" aria-label=\"Close\"\n          (click)=\"modal.dismiss('cancel'); closeUpdateModal()\">\n          <span aria-hidden=\"true\">Close</span>\n        </button>\n      </div>\n    </div>\n  </ng-template>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlatesService {\n  backendBaseURL = 'http://localhost:3000/api/plates';\n\n  constructor(private httpClient: HttpClient) { }\n\n  get(start = 1) {\n    return this.httpClient.get(this.backendBaseURL, {\n      params: new HttpParams().set('start', start.toString())\n    });\n  }\n\n\n  search(searchText) {\n    return this.httpClient.get(`${this.backendBaseURL}/search`, {\n      params: new HttpParams().set('search', searchText)\n    });\n  }\n\n\n  getCount() {\n    return this.httpClient.get(`${this.backendBaseURL}/count`);\n  }\n\n\n  create(data): Observable<any> {\n    return this.httpClient.post(\n      `${this.backendBaseURL}`,\n      JSON.stringify(data),\n      {\n        headers: new HttpHeaders({\n          'content-type': 'application/json',\n        }),\n      }\n    );\n  }\n\n  delete(id): Observable<any> {\n    return this.httpClient.delete(\n      `${this.backendBaseURL}`,\n      {\n        params: new HttpParams().set('id', id)\n      }\n    );\n  }\n\n  update(plate): Observable<any> {\n    return this.httpClient.put(\n      `${this.backendBaseURL}`,\n\n      JSON.stringify(plate),\n\n      {\n        headers: new HttpHeaders({\n          'content-type': 'application/json'\n        })\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>update works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}